{"version":3,"sources":["ui/Tab/index.js","components/NavigationPanel/index.js","endpoints/index.js","actions/actionTypes.js","actions/charactersActions.js","selectors/characters.js","enums/index.js","pages/CharactersPage/components/CharactersItem.js","components/CustomPagination/index.js","pages/CharactersPage/components/CharactersList.js","pages/CharactersPage/components/CharacterModal.js","pages/CharactersPage/components/CharactersFilters.js","utils/index.js","pages/CharactersPage/index.js","selectors/episodes.js","actions/episodesActions.js","pages/EpisodesPage/components/EpisodesFilter.js","pages/EpisodesPage/components/EpisodesList.js","pages/EpisodesPage/index.js","selectors/locations.js","actions/locationsActions.js","pages/LocationsPage/components/LocationsFilter.js","pages/LocationsPage/components/LocationsList.js","pages/LocationsPage/index.js","selectors/watchlist.js","pages/ListPage/components/WatchItem.js","actions/watchlistActions.js","pages/ListPage/components/WatchList.js","pages/ListPage/components/Form.js","pages/ListPage/index.js","routes.js","App.js","reducers/charactersReducer.js","reducers/episodesReduces.js","reducers/locationsReducer.js","reducers/watchlistReducer.js","store/index.js","index.js"],"names":["Tab","title","path","to","className","NavigationPanel","endpoints","SET_CHARACTERS","SET_ACTIVE_CHARACTER","SET_EPISODES","SET_LOCATIONS","SET_WATCHLIST","ADD_WATCHITEM","DELETE_WATCHITEM","TOGGLE_COMPLETE","setCharacters","characters","type","actionTypes","selectCharacters","state","selectCharactersInfo","createSelector","info","selectCharactersData","items","selectActiveCharacterId","activeCharacterId","selectActiveCharacter","activeId","find","item","id","characterStatus","CharactersItem","onClick","style","backgroundImage","image","name","backgroundColor","status","species","useStyles","makeStyles","theme","root","display","justifyContent","marginTop","spacing","marginBottom","CustomPagination","pages","changePage","activePage","classes","Pagination","count","color","page","onChange","e","CharactersList","setActiveCharacter","map","length","CharacterModal","isOpened","onClose","activeCharacter","Modal","open","disableAutoFocus","disableEnforceFocus","gender","location","origin","flexDirection","margin","position","left","formControl","minWidth","selectors","CharactersFilters","setFilters","filters","handleChange","event","target","value","FormControl","InputLabel","Select","MenuItem","TextField","label","variant","encodeQueryData","data","ret","d","push","encodeURIComponent","join","mapMethodsToProps","getCharacters","url","dispatch","a","fetch","then","res","json","connect","useState","useEffect","queryString","window","scrollTo","selectEpisodes","episodes","selectEpisodesInfo","selectEpisodesData","setEpisodes","textField","width","EpisodesFilter","EpisodesList","episode","air_date","getEpisodes","selectLocations","locations","selectLocationsInfo","selectLocationsData","setLocations","LocationsFilter","dimension","LocationsList","getLocations","selectWatchlist","watchlist","deleteWatchItem","watchItemId","toggleComplete","completed","cn","checked","htmlFor","WatchList","Form","addWatchItem","inputValue","setInputValue","onSubmit","preventDefault","trim","Date","placeholder","getWatchlist","localStorage","getItem","JSON","parse","watchItem","setItem","stringify","useRoutes","component","CharactersPage","EpisodesPage","LocationsPage","ListPage","App","routes","initialState","charactersReducer","action","results","episodesReducer","locationsReducer","watchlistReducer","filter","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAYeA,EARH,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KACnB,OACE,cAAC,IAAD,CAASC,GAAID,EAAb,SACE,qBAAKE,UAAU,MAAf,SAAsBH,OCSbI,EAZS,WAEtB,OACE,sBAAKD,UAAU,aAAf,UACE,cAAC,EAAD,CAAKH,MAAM,aAAaC,KAAK,gBAC7B,cAAC,EAAD,CAAKD,MAAM,WAAWC,KAAK,cAC3B,cAAC,EAAD,CAAKD,MAAM,YAAYC,KAAK,eAC5B,cAAC,EAAD,CAAKD,MAAM,gBAAgBC,KAAK,c,+BCXzBI,EACC,4CADDA,EAEA,2CAFAA,EAGD,0C,yBCHEC,EAAiB,iBACjBC,EAAuB,uBACvBC,EAAe,eACfC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAmB,mBACnBC,EAAkB,kBCLnBC,EAAgB,SAACC,GAAD,MAAiB,CAC5CC,KAAMC,EACNF,e,QCFWG,EAAmB,SAAAC,GAAK,OAAIA,EAAMJ,YAClCK,EAAuBC,YAClCH,GACA,SAAAH,GAAU,OAAIA,EAAWO,MAAQ,MAEtBC,EAAuBF,YAClCH,GACA,SAAAH,GAAU,OAAIA,EAAWS,OAAS,MAEvBC,EAA0BJ,YACrCH,GACA,SAAAH,GAAU,OAAIA,EAAWW,mBAAqB,QAEnCC,EAAwBN,YACnCE,EACAE,GACA,SAACD,EAAOI,GAAR,OAAqBJ,EAAMK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOH,MAAa,MClBtDI,G,MAAkB,CAC7B,MAAS,mBACT,KAAQ,mBACR,QAAW,uBCeEC,EAfQ,SAAC,GAAqB,IAApBH,EAAmB,EAAnBA,KAAMI,EAAa,EAAbA,QAC7B,OACE,sBAAK/B,UAAU,aAAa+B,QAAS,kBAAMA,EAAQJ,EAAKC,KAAxD,UACE,qBAAK5B,UAAU,cAAcgC,MAAO,CAACC,gBAAgB,OAAD,OAASN,EAAKO,MAAd,QACpD,sBAAKlC,UAAU,gBAAf,UACE,oBAAIA,UAAU,aAAd,SAA4B2B,EAAKQ,OACjC,sBAAKnC,UAAU,aAAf,UACE,qBAAKA,UAAU,kBAAkBgC,MAAO,CAACI,gBAAiBP,EAAgBF,EAAKU,WAC/E,uBAAMrC,UAAU,eAAhB,UAAgC2B,EAAKU,OAArC,MAAgDV,EAAKW,qB,kBCPzDC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,eAAgB,SAChBC,UAAWJ,EAAMK,QAAQ,GACzBC,aAAcN,EAAMK,QAAQ,QAYjBE,EARU,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,WACtCC,EAAUb,IAEhB,OACE,cAACc,EAAA,EAAD,CAAYD,QAAS,CAACV,KAAMU,EAAQV,MAAOY,MAAOL,EAAOM,MAAM,UAAUC,KAAML,EAAYM,SAAU,SAACC,EAAGF,GAAJ,OAAaN,EAAWM,OCIlHG,EAhBQ,SAAC,GAA+D,IAA9DtC,EAA6D,EAA7DA,MAAOuC,EAAsD,EAAtDA,mBAAoBzC,EAAkC,EAAlCA,KAAM+B,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,WACpE,OACE,sBAAKnD,UAAU,OAAf,UACGqB,EAAMwC,KAAI,SAAAlC,GAAI,OACb,cAAC,EAAD,CAA8BA,KAAMA,EAAMI,QAAS6B,GAA9BjC,EAAKC,OAEV,IAAjBP,EAAMyC,QACL,qBAAK9D,UAAU,cAAf,SACE,kDAGJ,cAAC,EAAD,CAAkBiD,MAAO9B,EAAK8B,MAAOC,WAAYA,EAAYC,WAAYA,Q,SCYhEY,EAxBQ,SAAC,GAA0C,IAAD,IAAxCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBAC1C,OACE,cAACC,EAAA,EAAD,CACEC,KAAMJ,EACNC,QAASA,EACTI,kBAAgB,EAChBC,qBAAmB,EAJrB,SAME,sBAAKtE,UAAU,QAAf,UACE,qBAAKA,UAAU,eAAegC,MAAO,CAACC,gBAAgB,OAAD,OAASiC,EAAgBhC,MAAzB,QACrD,oBAAIlC,UAAU,cAAd,SAA6BkE,EAAgB/B,OAC7C,sBAAKnC,UAAU,aAAf,UACE,qBAAKA,UAAU,kBAAkBgC,MAAO,CAACI,gBAAiBP,EAAgBqC,EAAgB7B,WAC1F,uBAAMrC,UAAU,gBAAhB,UAAiCkE,EAAgB7B,OAAjD,MAA4D6B,EAAgB5B,QAA5E,MAAwF4B,EAAgBK,aAE1G,mBAAGvE,UAAU,cAAb,kCACA,mBAAGA,UAAU,kBAAb,mBAAgCkE,EAAgBM,gBAAhD,aAAgC,EAA0BrC,OAC1D,mBAAGnC,UAAU,cAAb,4BACA,mBAAGA,UAAU,kBAAb,mBAAgCkE,EAAgBO,cAAhD,aAAgC,EAAwBtC,a,qDCd1DI,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACT+B,cAAe,SACfC,OAAQlC,EAAMK,QAAQ,GACtB8B,SAAU,WACVC,KAAM,GAERC,YAAa,CACXH,OAAQlC,EAAMK,QAAQ,GACtBiC,SAAU,KAEZC,UAAW,CACTjC,aAAc,QAqDHkC,EAjDW,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,QAChC/B,EAAUb,IAEV6C,EAAe,SAACC,GAAW,IAAD,EACyB,EAAnDA,EAAMC,OAAOC,QAAUJ,EAAQE,EAAMC,OAAOnD,MAMhD+C,EAAW,2BAAIC,GAAL,uBAAeE,EAAMC,OAAOnD,KAAOkD,EAAMC,OAAOC,OAAhD,qBAA6D,GAA7D,KALRL,EAAW,2BAAIC,GAAL,uBAAeE,EAAMC,OAAOnD,KAAO,IAAnC,qBAA6C,GAA7C,MAQd,OACE,sBAAKnC,UAAWoD,EAAQV,KAAxB,UACE,sBAAK1C,UAAWoD,EAAQ4B,UAAxB,UACE,eAACQ,EAAA,EAAD,CAAaxF,UAAWoD,EAAQ0B,YAAhC,UACE,cAACW,EAAA,EAAD,qBACA,eAACC,EAAA,EAAD,CACEH,MAAOJ,EAAQ9C,OACfoB,SAAU2B,EACVjD,KAAK,SAHP,UAKE,cAACwD,EAAA,EAAD,CAAUJ,MAAM,GAAhB,kBACA,cAACI,EAAA,EAAD,CAAUJ,MAAM,QAAhB,mBACA,cAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,kBACA,cAACI,EAAA,EAAD,CAAUJ,MAAM,UAAhB,2BAGJ,eAACC,EAAA,EAAD,CAAaxF,UAAWoD,EAAQ0B,YAAhC,UACE,cAACW,EAAA,EAAD,qBACA,eAACC,EAAA,EAAD,CACEH,MAAOJ,EAAQZ,OACfd,SAAU2B,EACVjD,KAAK,SAHP,UAKE,cAACwD,EAAA,EAAD,CAAUJ,MAAM,GAAhB,kBACA,cAACI,EAAA,EAAD,CAAUJ,MAAM,SAAhB,oBACA,cAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,kBACA,cAACI,EAAA,EAAD,CAAUJ,MAAM,aAAhB,wBACA,cAACI,EAAA,EAAD,CAAUJ,MAAM,UAAhB,8BAIN,cAACK,EAAA,EAAD,CAAWzD,KAAK,UAAU0D,MAAM,UAAUC,QAAQ,WAAWrC,SAAU2B,EAAcG,MAAOJ,EAAQ7C,cCrE7FyD,EAAkB,SAACC,GAC9B,IAAMC,EAAM,GACZ,IAAK,IAAIC,KAAKF,EACZC,EAAIE,KAAKC,mBAAmBF,GAAK,IAAME,mBAAmBJ,EAAKE,KACjE,MAAQ,KAAOD,EAAII,KAAK,MCwCpBC,GAAoB,CACxBC,cTjC2B,SAACC,GAAD,8CAAS,WAAMC,GAAN,eAAAC,EAAA,sEACXC,MAAMH,GAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UADhB,OAC9BlG,EAD8B,OAEpC6F,EAAS9F,EAAcC,IAFa,2CAAT,uDSkC3BgD,mBTvCgC,SAAChC,GAAD,MAAS,CACzCf,KAAMC,EACNc,QSuCamF,gBAXS,SAAC/F,GAAD,MAAY,CAClCG,KAAMF,EAAqBD,GAC3BK,MAAOD,EAAqBJ,GAC5BO,kBAAmBD,EAAwBN,GAC3CkD,gBAAiB1C,EAAsBR,MAODsF,GAAzBS,EAtCQ,SAAC,GAA0F,IAAzFR,EAAwF,EAAxFA,cAAepF,EAAyE,EAAzEA,KAAME,EAAmE,EAAnEA,MAAOE,EAA4D,EAA5DA,kBAAmBqC,EAAyC,EAAzCA,mBAAoBM,EAAqB,EAArBA,gBAAqB,EACjF8C,mBAAS,CACrCxD,KAAM,EACNnB,OAAQ,GACRC,QAAS,GACTiC,OAAQ,KALqG,mBACxGY,EADwG,KAC/FD,EAD+F,KAkB/G,OALA+B,qBAAU,WACR,IAAMC,EAAcnB,EAAgBZ,GACpCoB,EAAcrG,EAAuBgH,KACpC,CAACX,EAAepB,IAGjB,sBAAKnF,UAAU,OAAf,UACE,cAAC,EAAD,CAAmBkF,WAAYA,EAAYC,QAASA,IACpD,cAAC,EAAD,CAAgBjB,gBAAiBA,EAAiBF,WAAYzC,EAAmB0C,QAAS,kBAAML,EAAmB,SACnH,cAAC,EAAD,CAAgBvC,MAAOA,EAAOuC,mBAAoBA,EAAoBzC,KAAMA,EAAM+B,WAdnE,SAACM,GAClB0B,EAAW,2BAAIC,GAAL,IAAc3B,UACxB2D,OAAOC,SAAS,EAAG,IAYyFjE,WAAYgC,EAAQ3B,aC9BvH6D,GAAiB,SAAArG,GAAK,OAAIA,EAAMsG,UAChCC,GAAqBrG,YAChCmG,IACA,SAAAC,GAAQ,OAAIA,EAASnG,MAAQ,MAElBqG,GAAqBtG,YAChCmG,IACA,SAAAC,GAAQ,OAAIA,EAASjG,OAAS,MCPnBoG,GAAc,SAACH,GAAD,MAAe,CACxCzG,KAAMC,EACNwG,aCAI/E,I,MAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiF,UAAW,CACTC,MAAO,OACP5E,aAAc,SAgBH6E,GAZQ,SAAC,GAA2B,IAA1BzC,EAAyB,EAAzBA,QAASD,EAAgB,EAAhBA,WAC1B9B,EAAUb,KAMhB,OACE,cAACqD,EAAA,EAAD,CAAWxC,QAAS,CAACV,KAAMU,EAAQsE,WAAYvF,KAAK,OAAO0D,MAAM,OAAOC,QAAQ,WAAWrC,SALxE,SAAC4B,GACpBH,EAAW,CAAC/C,KAAMkD,EAAMC,OAAOC,MAAO/B,KAAM,KAIuE+B,MAAOJ,EAAQhD,QCYvH0F,GA1BM,SAAC,GAAgE,IAA/DxG,EAA8D,EAA9DA,MAAO6B,EAAuD,EAAvDA,WAAY/B,EAA2C,EAA3CA,KAAMgC,EAAqC,EAArCA,WAAYgC,EAAyB,EAAzBA,QAASD,EAAgB,EAAhBA,WACnE,OACE,sBAAKlF,UAAU,WAAf,UACE,cAAC,GAAD,CAAgBmF,QAASA,EAASD,WAAYA,IAC5B,IAAjB7D,EAAMyC,OAAe,qBAAK9D,UAAU,iBAAf,SACnBqB,EAAMwC,KAAI,SAAAlC,GAAI,OACb,sBAAmB3B,UAAU,iBAA7B,UACE,qBAAKA,UAAU,mBAAf,SAAmC2B,EAAKC,KACxC,oBAAI5B,UAAU,iBAAd,SAAgC2B,EAAKQ,OACrC,sBAAKnC,UAAU,iBAAf,UACE,+BAAO2B,EAAKmG,UACZ,+BAAOnG,EAAKoG,gBALNpG,EAAKC,SAWjB,qBAAK5B,UAAU,cAAf,SACE,kDAGJ,cAAC,EAAD,CAAkBiD,MAAO9B,EAAK8B,MAAOC,WAAYA,EAAYC,WAAYA,QCUzEmD,GAAoB,CACxB0B,YH9ByB,SAACxB,GAAD,8CAAS,WAAMC,GAAN,eAAAC,EAAA,sEACXC,MAAMH,GAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UADhB,OAC5BQ,EAD4B,OAElCb,EAASgB,GAAYH,IAFa,2CAAT,wDGiCZP,gBATS,SAAC/F,GAAD,MAAY,CAClCG,KAAMoG,GAAmBvG,GACzBK,MAAOmG,GAAmBxG,MAOYsF,GAAzBS,EAhCM,SAAC,GAAgC,IAA/BiB,EAA8B,EAA9BA,YAAa3G,EAAiB,EAAjBA,MAAOF,EAAU,EAAVA,KAAU,EACrB6F,mBAAS,CACrCxD,KAAM,EACNrB,KAAM,KAH2C,mBAC5CgD,EAD4C,KACnCD,EADmC,KAgBnD,OALA+B,qBAAU,WACR,IAAMC,EAAcnB,EAAgBZ,GACpC6C,EAAY9H,EAAqBgH,KAChC,CAACc,EAAa7C,IAGf,qBAAKnF,UAAU,OAAf,SACE,cAAC,GAAD,CAAcqB,MAAOA,EAAOF,KAAMA,EAAMgC,WAAYgC,EAAQ3B,KAAMN,WAZnD,SAACM,GAClB0B,EAAW,2BAAIC,GAAL,IAAc3B,UACxB2D,OAAOC,SAAS,EAAG,IAUyEjC,QAASA,EAASD,WAAYA,SCxBjH+C,GAAkB,SAAAjH,GAAK,OAAIA,EAAMkH,WACjCC,GAAsBjH,YACjC+G,IACA,SAAAC,GAAS,OAAIA,EAAU/G,MAAQ,MAEpBiH,GAAsBlH,YACjC+G,IACA,SAAAC,GAAS,OAAIA,EAAU7G,OAAS,MCPrBgH,GAAe,SAACH,GAAD,MAAgB,CAC1CrH,KAAMC,EACNoH,cCAI3F,I,OAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiF,UAAW,CACT/E,QAAS,OACTC,eAAgB,gBAChB+E,MAAO,OACP5E,aAAc,SAoBHuF,GAhBS,SAAC,GAA2B,IAA1BnD,EAAyB,EAAzBA,QAASD,EAAgB,EAAhBA,WAC3B9B,EAAUb,KAEV6C,EAAe,SAACC,GAAW,IAAD,EAC9BH,EAAW,2BAAIC,GAAL,uBAAeE,EAAMC,OAAOnD,KAAOkD,EAAMC,OAAOC,OAAhD,qBAA6D,GAA7D,MAGZ,OACE,sBAAKvF,UAAWoD,EAAQsE,UAAxB,UACE,cAAC9B,EAAA,EAAD,CAAWzD,KAAK,OAAO0D,MAAM,OAAOC,QAAQ,WAAWrC,SAAU2B,EAAcG,MAAOJ,EAAQhD,OAC9F,cAACyD,EAAA,EAAD,CAAWhE,GAAG,iBAAiBO,KAAK,OAAO0D,MAAM,OAAOC,QAAQ,WAAWrC,SAAU2B,EAAcG,MAAOJ,EAAQtE,OAClH,cAAC+E,EAAA,EAAD,CAAWhE,GAAG,iBAAiBO,KAAK,YAAY0D,MAAM,YAAYC,QAAQ,WAAWrC,SAAU2B,EAAcG,MAAOJ,EAAQoD,gBCOnHC,GA1BO,SAAC,GAAgE,IAA/DnH,EAA8D,EAA9DA,MAAO6B,EAAuD,EAAvDA,WAAY/B,EAA2C,EAA3CA,KAAMgC,EAAqC,EAArCA,WAAYgC,EAAyB,EAAzBA,QAASD,EAAgB,EAAhBA,WACpE,OACE,sBAAKlF,UAAU,YAAf,UACE,cAAC,GAAD,CAAiBmF,QAASA,EAASD,WAAYA,IAC7B,IAAjB7D,EAAMyC,OAAe,qBAAK9D,UAAU,kBAAf,SACnBqB,EAAMwC,KAAI,SAAAlC,GAAI,OACb,sBAAmB3B,UAAU,kBAA7B,UACE,qBAAKA,UAAU,oBAAf,SAAoC2B,EAAKC,KACzC,oBAAI5B,UAAU,kBAAd,SAAiC2B,EAAKQ,OACtC,sBAAKnC,UAAU,kBAAf,UACE,oBAAGA,UAAU,kBAAb,wBAA0C,+BAAO2B,EAAK4G,eACtD,oBAAGvI,UAAU,kBAAb,oBAAsC,+BAAO2B,EAAKd,eAL5Cc,EAAKC,SAWjB,qBAAK5B,UAAU,cAAf,SACE,kDAGJ,cAAC,EAAD,CAAkBiD,MAAO9B,EAAK8B,MAAOC,WAAYA,EAAYC,WAAYA,QCYzEmD,GAAoB,CACxBmC,aHhC0B,SAACjC,GAAD,8CAAS,WAAMC,GAAN,eAAAC,EAAA,sEACXC,MAAMH,GAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UADhB,OAC7BoB,EAD6B,OAEnCzB,EAAS4B,GAAaH,IAFa,2CAAT,wDGmCbnB,gBATS,SAAC/F,GAAD,MAAY,CAClCG,KAAMgH,GAAoBnH,GAC1BK,MAAO+G,GAAoBpH,MAOWsF,GAAzBS,EAlCO,SAAC,GAAiC,IAAhC0B,EAA+B,EAA/BA,aAAcpH,EAAiB,EAAjBA,MAAOF,EAAU,EAAVA,KAAU,EACvB6F,mBAAS,CACrCxD,KAAM,EACNrB,KAAM,GACNtB,KAAM,GACN0H,UAAW,KALwC,mBAC9CpD,EAD8C,KACrCD,EADqC,KAkBrD,OALA+B,qBAAU,WACR,IAAMC,EAAcnB,EAAgBZ,GACpCsD,EAAavI,EAAsBgH,KAClC,CAACuB,EAActD,IAGhB,qBAAKnF,UAAU,OAAf,SACE,cAAC,GAAD,CAAeqB,MAAOA,EAAOF,KAAMA,EAAMgC,WAAYgC,EAAQ3B,KAAMN,WAZpD,SAACM,GAClB0B,EAAW,2BAAIC,GAAL,IAAc3B,UACxB2D,OAAOC,SAAS,EAAG,IAU0EjC,QAASA,EAASD,WAAYA,SC5BlHwD,I,OAAkB,SAAA1H,GAAK,OAAIA,EAAM2H,Y,oBCkCxCrC,GAAoB,CACxBsC,gBCvB6B,SAACC,GAAD,MAAkB,CAC/ChI,KAAMC,EACN+H,gBDsBAC,eCnB4B,SAACD,GAAD,MAAkB,CAC9ChI,KAAMC,EACN+H,iBDoBa9B,eAAQ,KAAMT,GAAdS,EAhCG,SAAC,GAEZ,IADLlH,EACI,EADJA,MAAO+B,EACH,EADGA,GAAImH,EACP,EADOA,UAAWH,EAClB,EADkBA,gBAAiBE,EACnC,EADmCA,eAEvC,OACE,oBAAI9I,UAAWgJ,KAAG,CAChBD,cADF,SAIE,sBAAK/I,UAAU,OAAf,UACE,uBACEa,KAAK,WACLb,UAAU,SACV4B,GAAIA,EACJqH,QAASF,EACTtF,SAAU,kBAAMqF,EAAelH,MAEjC,uBAAOsH,QAAStH,EAAhB,SAAqB/B,IACrB,wBACEgB,KAAK,SACLb,UAAU,UACV+B,QAAS,kBAAM6G,EAAgBhH,cEX1BuH,GAbG,SAAC,GAAD,IAAGR,EAAH,EAAGA,UAAH,OAChB,oBAAI3I,UAAU,YAAd,SACG2I,EAAU9E,KAAI,gBAAGhE,EAAH,EAAGA,MAAO+B,EAAV,EAAUA,GAAImH,EAAd,EAAcA,UAAd,OACb,cAAC,GAAD,CACElJ,MAAOA,EACP+B,GAAIA,EAEJmH,UAAWA,GADNnH,SC0BEwH,GAjCF,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACGrC,mBAAS,IADZ,mBAC1BsC,EAD0B,KACdC,EADc,KAqBjC,OACE,sBAAMC,SAfa,SAACnE,GACpBA,EAAMoE,iBAEoB,KAAtBH,EAAWI,SACbL,EAAa,CACXxJ,MAAOyJ,EACP1H,IAAK,IAAI+H,KACTZ,WAAW,IAGbQ,EAAc,MAKhB,SACE,uBACEvJ,UAAU,WACV4J,YAAY,0BACZnG,SAvBc,SAAC,GAAgB,IAAd6B,EAAa,EAAbA,OACrBiE,EAAcjE,EAAOC,QAuBjBA,MAAO+D,OCMThD,GAAoB,CACxBuD,aHd0B,kBAAM,SAACpD,GAC/B,IArByBkC,EAqBnB3C,EAAO8D,aAAaC,QAAQ,cAE9B/D,GACFS,GAxBuBkC,EAwBDqB,KAAKC,MAAMjE,GAxBK,CAC1CnF,KAAMC,EACN6H,iBGiCAU,aH9B0B,SAACa,GAAD,MAAgB,CAC1CrJ,KAAMC,EACNoJ,eG+BanD,gBATS,SAAA/F,GAAK,MAAK,CAChC2H,UAAWD,GAAgB1H,MAQWsF,GAAzBS,EAhCE,SAAC,GAA8C,IAA5C8C,EAA2C,EAA3CA,aAAclB,EAA6B,EAA7BA,UAAWU,EAAkB,EAAlBA,aAS3C,OARApC,qBAAU,WACR4C,MACC,CAACA,IAEJ5C,qBAAU,WACR6C,aAAaK,QAAQ,aAAcH,KAAKI,UAAUzB,OAIlD,0BAAS3I,UAAU,UAAnB,UACE,cAAC,GAAD,CAAMqJ,aAAcA,IACnBV,EAAU7E,OAAS,GAEhB,yBAAS9D,UAAU,OAAnB,SACE,cAAC,GAAD,CAAW2I,UAAWA,YCHnB0B,GAbG,WAChB,OACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOvK,KAAK,cAAcwK,UAAWC,KACrC,cAAC,IAAD,CAAOzK,KAAK,YAAYwK,UAAWE,KACnC,cAAC,IAAD,CAAO1K,KAAK,aAAawK,UAAWG,KACpC,cAAC,IAAD,CAAO3K,KAAK,QAAQwK,UAAWI,KAE/B,cAAC,IAAD,CAAU3K,GAAG,oBCCN4K,OAVf,WACE,IAAMC,EAASP,KACf,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACCO,M,kBCTDC,GAAe,CACnB1J,KAAM,GACNE,MAAO,GACPE,kBAAmB,MAqBNuJ,GAnBW,WAAiC,IAAhC9J,EAA+B,uDAAzB6J,GAAcE,EAAW,uCACxD,OAAOA,EAAOlK,MACZ,KAAKC,EACH,OAAO,2BACFE,GADL,IAEEG,KAAM4J,EAAOnK,WAAWO,KACxBE,MAAO0J,EAAOnK,WAAWoK,UAE7B,KAAKlK,EACH,OAAO,2BACFE,GADL,IAEEO,kBAAmBwJ,EAAOnJ,KAG9B,QACE,OAAOZ,ICpBP6J,GAAe,CACnB1J,KAAM,GACNE,MAAO,IAgBM4J,GAbS,WAAiC,IAAhCjK,EAA+B,uDAAzB6J,GAAcE,EAAW,uCACtD,OAAOA,EAAOlK,MACZ,KAAKC,EACH,OAAO,2BACFE,GADL,IAEEG,KAAM4J,EAAOzD,SAASnG,KACtBE,MAAO0J,EAAOzD,SAAS0D,UAE3B,QACE,OAAOhK,ICdP6J,GAAe,CACnB1J,KAAM,GACNE,MAAO,IAgBM6J,GAbU,WAAiC,IAAhClK,EAA+B,uDAAzB6J,GAAcE,EAAW,uCACvD,OAAOA,EAAOlK,MACZ,KAAKC,EACH,OAAO,2BACFE,GADL,IAEEG,KAAM4J,EAAO7C,UAAU/G,KACvBE,MAAO0J,EAAO7C,UAAU8C,UAE5B,QACE,OAAOhK,I,SCSEmK,GAvBU,WAA2B,IAA1BxC,EAAyB,uDAAf,GAAIoC,EAAW,uCACjD,OAAOA,EAAOlK,MACZ,KAAKC,EACH,OAAOiK,EAAOpC,UAChB,KAAK7H,EACH,MAAM,GAAN,oBAAW6H,GAAX,CAAsBoC,EAAOb,YAC/B,KAAKpJ,EACH,OAAO6H,EAAUyC,QAAO,qBAAGxJ,KAAgBmJ,EAAOlC,eACpD,KAAK/H,EACH,OAAO6H,EAAU9E,KAAI,SAACqG,GACpB,OAAIA,EAAUtI,KAAOmJ,EAAOlC,YACnB,2BACFqB,GADL,IACgBnB,WAAYmB,EAAUnB,YAIjCmB,KAEX,QACE,OAAOvB,ICdP0C,GAAcC,aAAgB,CAClC1K,WAAYkK,GACZxD,SAAU2D,GACV/C,UAAWgD,GACXvC,UAAWwC,KAKEI,GAFDC,aAAYH,GAAaI,aAAgBC,OCRvDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJO,SAASC,eAAe,U","file":"static/js/main.40164dd6.chunk.js","sourcesContent":["import React from 'react';\nimport './index.scss';\nimport {NavLink} from 'react-router-dom';\n\nconst Tab = ({title, path}) => {\n  return (\n    <NavLink to={path}>\n      <div className=\"tab\">{title}</div>\n    </NavLink>\n  );\n};\n\nexport default Tab;","import React from 'react';\nimport './index.scss';\nimport Tab from '../../ui/Tab';\n\nconst NavigationPanel = () => {\n\n  return (\n    <div className=\"navigation\">\n      <Tab title=\"Characters\" path=\"/characters\" />\n      <Tab title=\"Episodes\" path=\"/episodes\" />\n      <Tab title=\"Locations\" path=\"/locations\" />\n      <Tab title=\"My watch list\" path=\"/list\" />\n    </div>\n  );\n};\n\nexport default NavigationPanel;","export const endpoints = {\n  characters: \"https://rickandmortyapi.com/api/character\",\n  locations: \"https://rickandmortyapi.com/api/location\",\n  episodes: \"https://rickandmortyapi.com/api/episode\"\n};\n"," export const SET_CHARACTERS = 'SET_CHARACTERS'; \n export const SET_ACTIVE_CHARACTER = 'SET_ACTIVE_CHARACTER';\n export const SET_EPISODES = 'SET_EPISODES'; \n export const SET_LOCATIONS = 'SET_LOCATIONS';\n export const SET_WATCHLIST = 'SET_WATCHLIST';\n export const ADD_WATCHITEM = 'ADD_WATCHITEM';\n export const DELETE_WATCHITEM = 'DELETE_WATCHITEM';\n export const TOGGLE_COMPLETE = 'TOGGLE_COMPLETE';\n\n","import * as actionTypes from './actionTypes';\n\nexport const setCharacters = (characters) => ({\n  type: actionTypes.SET_CHARACTERS,\n  characters\n})\n\nexport const setActiveCharacter = (id) => ({\n  type: actionTypes.SET_ACTIVE_CHARACTER,\n  id\n})\n\nexport const getCharacters = (url) => async(dispatch) => {\n  const characters = await fetch(url).then(res => res.json());\n  dispatch(setCharacters(characters));\n};","import { createSelector } from 'reselect';\n\nexport const selectCharacters = state => state.characters;\nexport const selectCharactersInfo = createSelector(\n  selectCharacters,\n  characters => characters.info || {}\n);\nexport const selectCharactersData = createSelector(\n  selectCharacters,\n  characters => characters.items || []\n);\nexport const selectActiveCharacterId = createSelector(\n  selectCharacters,\n  characters => characters.activeCharacterId || null\n);\nexport const selectActiveCharacter = createSelector(\n  selectCharactersData,\n  selectActiveCharacterId,\n  (items, activeId) => items.find(item => item.id === activeId) || {}\n);","export const characterStatus = {\n  'Alive': 'rgb(85, 204, 68)',\n  'Dead': 'rgb(214, 61, 46)',\n  'unknown': 'rgb(158, 158, 158)',\n} ","import React from 'react'\nimport {characterStatus} from '../../../enums/index';\n\nconst CharactersItem = ({item, onClick}) => {\n  return (\n    <div className=\"list__item\" onClick={() => onClick(item.id)}>\n      <div className=\"item__image\" style={{backgroundImage: `url(${item.image})`}}></div>\n      <div className=\"item__content\">\n        <h2 className=\"item__name\">{item.name}</h2>\n        <div className=\"item__info\">\n          <div className=\"item__indicator\" style={{backgroundColor: characterStatus[item.status]}}></div>\n          <span className=\"item__status\">{item.status} - {item.species}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CharactersItem;","import React from 'react';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(5),\n  },\n}));\n\nconst CustomPagination = ({pages, changePage, activePage}) => {\n  const classes = useStyles();\n\n  return (\n    <Pagination classes={{root: classes.root}} count={pages} color=\"primary\" page={activePage} onChange={(e, page) => changePage(page)} />\n  );\n};\n\nexport default CustomPagination;\n","import React from 'react';\nimport './index.scss';\nimport CharactersItem from './CharactersItem';\nimport CustomPagination from '../../../components/CustomPagination';\n\nconst CharactersList = ({items, setActiveCharacter, info, changePage, activePage}) => {\n  return (\n    <div className=\"list\">\n      {items.map(item => (\n        <CharactersItem key={item.id} item={item} onClick={setActiveCharacter} />\n      ))}\n      {items.length === 0 && (\n        <div className=\"list__empty\">\n          <h1>No items found</h1>\n        </div>\n      )}\n      <CustomPagination pages={info.pages} changePage={changePage} activePage={activePage} />\n    </div>\n  )\n};\n\nexport default CharactersList;","import React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport {characterStatus} from '../../../enums/index';\n\nconst CharacterModal = ({isOpened, onClose, activeCharacter}) => {\n  return (\n    <Modal\n      open={isOpened}\n      onClose={onClose}\n      disableAutoFocus\n      disableEnforceFocus\n    >\n      <div className=\"modal\">\n        <div className=\"modal__image\" style={{backgroundImage: `url(${activeCharacter.image})`}}></div>\n        <h2 className=\"modal__name\">{activeCharacter.name}</h2>\n        <div className=\"item__info\">\n          <div className=\"item__indicator\" style={{backgroundColor: characterStatus[activeCharacter.status]}}></div>\n          <span className=\"modal__status\">{activeCharacter.status} - {activeCharacter.species} - {activeCharacter.gender}</span>\n        </div>\n        <p className=\"modal__text\">Last known location:</p>\n        <p className=\"modal__location\">{activeCharacter.location?.name}</p>\n        <p className=\"modal__text\">First seen in:</p>\n        <p className=\"modal__location\">{activeCharacter.origin?.name}</p>\n      </div>\n    </Modal>\n  );\n};\n\nexport default CharacterModal;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: theme.spacing(3),\n    position: 'absolute',\n    left: 0,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectors: {\n    marginBottom: 10,\n  }\n}));\n\nconst CharactersFilters = ({setFilters, filters}) => {\n  const classes = useStyles();\n\n  const handleChange = (event) => {\n    if (event.target.value === filters[event.target.name]) {\n      setFilters({...filters, [event.target.name]: '', page: 1});\n\n      return;\n    }\n\n    setFilters({...filters, [event.target.name]: event.target.value, page: 1});\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.selectors}>\n        <FormControl className={classes.formControl}>\n          <InputLabel>Status</InputLabel>\n          <Select\n            value={filters.status}\n            onChange={handleChange}\n            name=\"status\"\n          >\n            <MenuItem value=\"\">None</MenuItem>\n            <MenuItem value=\"alive\">Alive</MenuItem>\n            <MenuItem value=\"dead\">Dead</MenuItem>\n            <MenuItem value=\"unknown\">Unknown</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel>Gender</InputLabel>\n          <Select\n            value={filters.gender}\n            onChange={handleChange}\n            name=\"gender\"\n          >\n            <MenuItem value=\"\">None</MenuItem>\n            <MenuItem value=\"female\">Female</MenuItem>\n            <MenuItem value=\"male\">Male</MenuItem>\n            <MenuItem value=\"genderless\">Genderless</MenuItem>\n            <MenuItem value=\"unknown\">Unknown</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n      <TextField name=\"species\" label=\"Species\" variant=\"outlined\" onChange={handleChange} value={filters.species} />\n    </div>\n  );\n}\n\nexport default CharactersFilters;","export const encodeQueryData = (data) => {\n  const ret = [];\n  for (let d in data)\n    ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(data[d]));\n  return  '/?' + ret.join('&');\n}","import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {endpoints} from '../../endpoints';\nimport {getCharacters, setActiveCharacter} from '../../actions/charactersActions';\nimport {selectCharactersInfo, selectCharactersData, selectActiveCharacterId, selectActiveCharacter} from '../../selectors/characters';\nimport CharactersList from './components/CharactersList';\nimport CharacterModal from './components/CharacterModal';\nimport CharactersFilters from './components/CharactersFilters';\nimport {encodeQueryData} from '../../utils';\n\nconst CharactersPage = ({getCharacters, info, items, activeCharacterId, setActiveCharacter, activeCharacter}) => {\n  const [filters, setFilters] = useState({\n    page: 1,\n    status: '',\n    species: '',\n    gender: '',\n  });\n  \n  const changePage = (page) => {\n    setFilters({...filters, page});\n    window.scrollTo(0, 0);\n  };\n\n  useEffect(() => {\n    const queryString = encodeQueryData(filters);\n    getCharacters(endpoints.characters + queryString);\n  }, [getCharacters, filters]);\n\n  return (\n    <div className=\"page\">\n      <CharactersFilters setFilters={setFilters} filters={filters} />\n      <CharacterModal activeCharacter={activeCharacter} isOpened={!!activeCharacterId} onClose={() => setActiveCharacter(null)} />\n      <CharactersList items={items} setActiveCharacter={setActiveCharacter} info={info} changePage={changePage} activePage={filters.page} />\n    </div>\n  )\n};\n\nconst mapStateToProps = (state) => ({\n  info: selectCharactersInfo(state),\n  items: selectCharactersData(state),\n  activeCharacterId: selectActiveCharacterId(state),\n  activeCharacter: selectActiveCharacter(state),\n});\n\nconst mapMethodsToProps = {\n  getCharacters,\n  setActiveCharacter,\n}\nexport default connect(mapStateToProps, mapMethodsToProps)(CharactersPage);","import { createSelector } from 'reselect';\n\nexport const selectEpisodes = state => state.episodes;\nexport const selectEpisodesInfo = createSelector(\n  selectEpisodes,\n  episodes => episodes.info || {}\n);\nexport const selectEpisodesData = createSelector(\n  selectEpisodes,\n  episodes => episodes.items || []\n);\n","import * as actionTypes from './actionTypes';\n\nexport const setEpisodes = (episodes) => ({\n  type: actionTypes.SET_EPISODES,\n  episodes\n})\n\nexport const getEpisodes = (url) => async(dispatch) => {\n  const episodes = await fetch(url).then(res => res.json());\n  dispatch(setEpisodes(episodes));\n};","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: '50vw',\n    marginBottom: 15\n  },\n}));\n\nconst EpisodesFilter = ({filters, setFilters}) => {\n  const classes = useStyles();\n\n  const handleChange = (event) => {\n    setFilters({name: event.target.value, page: 1});\n  }\n\n  return (\n    <TextField classes={{root: classes.textField}} name=\"name\" label=\"Name\" variant=\"outlined\" onChange={handleChange} value={filters.name} />\n  );\n};\n\nexport default EpisodesFilter;","import React from 'react';\nimport './index.scss';\nimport CustomPagination from '../../../components/CustomPagination';\nimport EpisodesFilter from './EpisodesFilter';\n\nconst EpisodesList = ({items, changePage, info, activePage, filters, setFilters}) => {\n  return (\n    <div className=\"episodes\">\n      <EpisodesFilter filters={filters} setFilters={setFilters} />\n      {items.length !== 0 ? <div className=\"episodes__list\">\n        {items.map(item => (\n          <div key={item.id} className=\"episodes__item\">\n            <div className=\"episodes__number\">{item.id}</div>\n            <h2 className=\"episodes__name\">{item.name}</h2>\n            <div className=\"episodes__info\">\n              <span>{item.episode}</span>\n              <span>{item.air_date}</span>\n            </div>\n          </div>\n        ))}\n      </div>\n     : (\n        <div className=\"list__empty\">\n          <h1>No items found</h1>\n        </div>\n      )}\n      <CustomPagination pages={info.pages} changePage={changePage} activePage={activePage} />\n    </div>\n  );\n};\n\nexport default EpisodesList;","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {selectEpisodesData, selectEpisodesInfo} from '../../selectors/episodes';\nimport {getEpisodes} from '../../actions/episodesActions';\nimport {endpoints} from '../../endpoints';\nimport EpisodesList from './components/EpisodesList';\nimport {encodeQueryData} from '../../utils';\n\nconst EpisodesPage = ({getEpisodes, items, info}) => {\n  const [filters, setFilters] = useState({\n    page: 1,\n    name: '',\n  });\n\n  const changePage = (page) => {\n    setFilters({...filters, page});\n    window.scrollTo(0, 0);\n  };\n\n  useEffect(() => {\n    const queryString = encodeQueryData(filters);\n    getEpisodes(endpoints.episodes + queryString);\n  }, [getEpisodes, filters]);\n\n  return (\n    <div className=\"page\">\n      <EpisodesList items={items} info={info} activePage={filters.page} changePage={changePage} filters={filters} setFilters={setFilters} />\n    </div>\n  )\n};\n\nconst mapStateToProps = (state) => ({\n  info: selectEpisodesInfo(state),\n  items: selectEpisodesData(state),\n});\n\nconst mapMethodsToProps = {\n  getEpisodes,\n}\n\nexport default connect(mapStateToProps, mapMethodsToProps)(EpisodesPage);","import { createSelector } from 'reselect';\n\nexport const selectLocations = state => state.locations;\nexport const selectLocationsInfo = createSelector(\n  selectLocations,\n  locations => locations.info || {}\n);\nexport const selectLocationsData = createSelector(\n  selectLocations,\n  locations => locations.items || []\n);\n","import * as actionTypes from './actionTypes';\n\nexport const setLocations = (locations) => ({\n  type: actionTypes.SET_LOCATIONS,\n  locations\n})\n\nexport const getLocations = (url) => async(dispatch) => {\n  const locations = await fetch(url).then(res => res.json());\n  dispatch(setLocations(locations));\n};","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '50vw',\n    marginBottom: 15,\n  },\n}));\n\nconst LocationsFilter = ({filters, setFilters}) => {\n  const classes = useStyles();\n\n  const handleChange = (event) => {\n    setFilters({...filters, [event.target.name]: event.target.value, page: 1});\n  }\n\n  return (\n    <div className={classes.textField}>\n      <TextField name=\"name\" label=\"Name\" variant=\"outlined\" onChange={handleChange} value={filters.name} />\n      <TextField id=\"outlined-basic\" name=\"type\" label=\"Type\" variant=\"outlined\" onChange={handleChange} value={filters.type} />\n      <TextField id=\"outlined-basic\" name=\"dimension\" label=\"Dimension\" variant=\"outlined\" onChange={handleChange} value={filters.dimension} />\n    </div>\n  );\n};\n\nexport default LocationsFilter;","import React from 'react';\nimport './index.scss';\nimport CustomPagination from '../../../components/CustomPagination';\nimport LocationsFilter from './LocationsFilter';\n\nconst LocationsList = ({items, changePage, info, activePage, filters, setFilters}) => {\n  return (\n    <div className=\"locations\">\n      <LocationsFilter filters={filters} setFilters={setFilters} />\n      {items.length !== 0 ? <div className=\"locations__list\">\n        {items.map(item => (\n          <div key={item.id} className=\"locations__item\">\n            <div className=\"locations__number\">{item.id}</div>\n            <h2 className=\"locations__name\">{item.name}</h2>\n            <div className=\"locations__info\">\n              <p className=\"locations__text\">Dimension: <span>{item.dimension}</span></p>\n              <p className=\"locations__text\">Type:  <span>{item.type}</span></p>\n            </div>\n          </div>\n        ))}\n      </div>\n     : (\n        <div className=\"list__empty\">\n          <h1>No items found</h1>\n        </div>\n      )}\n      <CustomPagination pages={info.pages} changePage={changePage} activePage={activePage} />\n    </div>\n  );\n};\n\nexport default LocationsList;","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {selectLocationsData, selectLocationsInfo} from '../../selectors/locations';\nimport {getLocations} from '../../actions/locationsActions';\nimport {endpoints} from '../../endpoints';\nimport LocationsList from './components/LocationsList';\nimport {encodeQueryData} from '../../utils';\n\nconst LocationsPage = ({getLocations, items, info}) => {\n  const [filters, setFilters] = useState({\n    page: 1,\n    name: '',\n    type: '',\n    dimension: '',\n  });\n\n  const changePage = (page) => {\n    setFilters({...filters, page});\n    window.scrollTo(0, 0);\n  };\n\n  useEffect(() => {\n    const queryString = encodeQueryData(filters);\n    getLocations(endpoints.locations + queryString);\n  }, [getLocations, filters]);\n\n  return (\n    <div className=\"page\">\n      <LocationsList items={items} info={info} activePage={filters.page} changePage={changePage} filters={filters} setFilters={setFilters} />\n    </div>\n  )\n};\n\nconst mapStateToProps = (state) => ({\n  info: selectLocationsInfo(state),\n  items: selectLocationsData(state),\n});\n\nconst mapMethodsToProps = {\n  getLocations,\n}\n\nexport default connect(mapStateToProps, mapMethodsToProps)(LocationsPage);","export const selectWatchlist = state => state.watchlist;","import React from 'react';\nimport { connect } from 'react-redux';\nimport cn from 'classnames';\nimport {\n  deleteWatchItem, toggleComplete\n} from '../../../actions/watchlistActions';\n\nconst WatchItem = ({\n  title, id, completed, deleteWatchItem, toggleComplete\n}) => {\n  return (\n    <li className={cn({\n      completed,\n    })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={id}\n          checked={completed}\n          onChange={() => toggleComplete(id)}\n        />\n        <label htmlFor={id}>{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deleteWatchItem(id)}\n        />\n      </div>\n    </li>\n  );\n};\n\nconst mapMethodsToProps = {\n  deleteWatchItem,\n  toggleComplete\n};\n\nexport default connect(null, mapMethodsToProps)(WatchItem);\n","import * as actionTypes from './actionTypes';\n\nexport const setWatchlist = (watchlist) => ({\n  type: actionTypes.SET_WATCHLIST,\n  watchlist\n})\n\nexport const addWatchItem = (watchItem) => ({\n  type: actionTypes.ADD_WATCHITEM,\n  watchItem,\n});\n\nexport const deleteWatchItem = (watchItemId) => ({\n  type: actionTypes.DELETE_WATCHITEM,\n  watchItemId,\n});\n\nexport const toggleComplete = (watchItemId) => ({\n  type: actionTypes.TOGGLE_COMPLETE,\n  watchItemId,\n});\n\nexport const getWatchlist = () => (dispatch) => {\n    const data = localStorage.getItem('watch-list');\n\n    if (data) {\n      dispatch(setWatchlist(JSON.parse(data)));\n    }\n};","import React from 'react';\nimport WatchItem from './WatchItem';\n\nconst WatchList = ({ watchlist }) => (\n  <ul className=\"todo-list\">\n    {watchlist.map(({ title, id, completed }) => (\n      <WatchItem\n        title={title}\n        id={id}\n        key={id}\n        completed={completed}\n      />\n    ))}\n  </ul>\n);\n\nexport default WatchList;\n","import React, { useState } from 'react';\n\nconst Form = ({ addWatchItem }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInput = ({ target }) => {\n    setInputValue(target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (inputValue.trim() !== '') {\n      addWatchItem({\n        title: inputValue,\n        id: +new Date(),\n        completed: false,\n      });\n\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be watch?\"\n        onChange={handleInput}\n        value={inputValue}\n      />\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { useEffect } from 'react';\nimport './index.scss';\nimport { connect } from 'react-redux';\nimport {selectWatchlist} from '../../selectors/watchlist';\nimport {getWatchlist, addWatchItem} from '../../actions/watchlistActions';\nimport WatchList from './components/WatchList';\nimport Form from './components/Form';\n\nconst ListPage = ({ getWatchlist, watchlist, addWatchItem}) => {\n  useEffect(() => {\n    getWatchlist();\n  }, [getWatchlist]);\n\n  useEffect(() => {\n    localStorage.setItem('watch-list', JSON.stringify(watchlist));\n  });\n\n  return (\n    <section className=\"todoapp\">\n      <Form addWatchItem={addWatchItem} />\n      {watchlist.length > 0\n        && (\n          <section className=\"main\">\n            <WatchList watchlist={watchlist} />\n          </section>\n        )\n      }\n    </section>\n  );\n};\n\nconst mapStateToProps = state => ({\n  watchlist: selectWatchlist(state),\n});\n\nconst mapMethodsToProps = {\n  getWatchlist,\n  addWatchItem\n};\n\nexport default connect(mapStateToProps, mapMethodsToProps)(ListPage);\n","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport CharactersPage from './pages/CharactersPage';\nimport EpisodesPage from './pages/EpisodesPage';\nimport LocationsPage from './pages/LocationsPage';\nimport ListPage from './pages/ListPage';\n\nconst useRoutes = () => {\n  return (\n    <Switch>\n        <Route path=\"/characters\" component={CharactersPage} />\n        <Route path=\"/episodes\" component={EpisodesPage} />\n        <Route path=\"/locations\" component={LocationsPage} />\n        <Route path=\"/list\" component={ListPage} />\n\n        <Redirect to=\"/characters\" />\n    </Switch>\n  );\n}\n\nexport default useRoutes;","import React from 'react';\nimport './index.scss';\nimport {BrowserRouter} from 'react-router-dom';\nimport NavigationPanel from './components/NavigationPanel';\nimport useRoutes from './routes';\n\nfunction App() {\n  const routes = useRoutes();\n  return (\n    <BrowserRouter>\n      <NavigationPanel />\n      {routes}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  info: {},\n  items: [],\n  activeCharacterId: null\n}\nconst charactersReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case actionTypes.SET_CHARACTERS: \n      return {\n        ...state,\n        info: action.characters.info,\n        items: action.characters.results\n    }\n    case actionTypes.SET_ACTIVE_CHARACTER: {\n      return {\n        ...state,\n        activeCharacterId: action.id\n      }\n    }\n    default: \n      return state;\n  }\n};\n\nexport default charactersReducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  info: {},\n  items: [],\n}\n\nconst episodesReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case actionTypes.SET_EPISODES: \n      return {\n        ...state,\n        info: action.episodes.info,\n        items: action.episodes.results\n    }\n    default: \n      return state;\n  }\n};\n\nexport default episodesReducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  info: {},\n  items: [],\n}\n\nconst locationsReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case actionTypes.SET_LOCATIONS: \n      return {\n        ...state,\n        info: action.locations.info,\n        items: action.locations.results\n    }\n    default: \n      return state;\n  }\n};\n\nexport default locationsReducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst watchlistReducer = (watchlist=[], action) => {\n  switch(action.type) {\n    case actionTypes.SET_WATCHLIST:\n      return action.watchlist;\n    case actionTypes.ADD_WATCHITEM:\n      return [...watchlist, action.watchItem];\n    case actionTypes.DELETE_WATCHITEM:\n      return watchlist.filter(({ id }) => id !== action.watchItemId);\n    case actionTypes.TOGGLE_COMPLETE:\n      return watchlist.map((watchItem) => {\n        if (watchItem.id === action.watchItemId) {\n          return {\n            ...watchItem, completed: !watchItem.completed,\n          };\n        }\n\n        return watchItem;\n      });\n    default: \n      return watchlist;\n  }\n};\n\nexport default watchlistReducer;","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport charactersReducer from '../reducers/charactersReducer';\nimport episodesReducer from '../reducers/episodesReduces';\nimport locationsReducer from '../reducers/locationsReducer';\nimport watchlistReducer from '../reducers/watchlistReducer';\n\nconst rootReducer = combineReducers({\n  characters: charactersReducer,\n  episodes: episodesReducer,\n  locations: locationsReducer,\n  watchlist: watchlistReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}